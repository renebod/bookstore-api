from django.db import models
from django.conf import settings
from django.db.models.signals import post_save
from django.dispatch import receiver
import uuid
from simple_history.models import HistoricalRecords
{% if splunk %}from .splunk import *
from bookstore.serializers import *
{% endif %}


class CommonModel(models.Model):
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    #created_by = models.ForeignKey(settings.AUTH_USER_MODEL,on_delete=models.PROTECT, editable=False, related_name="+")
    #updated_by = models.ForeignKey(settings.AUTH_USER_MODEL,on_delete=models.PROTECT, editable=False, related_name="+")
    created_at = models.DateTimeField(auto_now_add=True, editable=False)
    updated_at = models.DateTimeField(auto_now=True, editable=False)


class Author(CommonModel):
    name = models.CharField("Author", max_length=20)
    history = HistoricalRecords()

    def __str__(self):
        return self.name

    class Meta:
        ordering = ('id',)


class Book(CommonModel):
    title = models.CharField("Title",max_length=100)
    author = models.ForeignKey(Author,related_name='books',on_delete=models.CASCADE)
    history = HistoricalRecords()

    def __str__(self):
        return self.title

    class Meta:
        ordering = ('id',)
{% if splunk %}


@receiver(post_save, sender=Book)
def send_to_splunk(sender, **kwargs):
    serialized = BookSerializer(sender)
    print(serialized)
    splunklog('bookstore', serialized)
{% endif %}
